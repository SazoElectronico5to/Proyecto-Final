/*
   Fundacion Kinal
   Centro educativo tecnico laboral Kinal
   Quinto perito
   Quinto electronica
   Codigo Tecnico: EB5AM / EB5AV 
   Curso: Taller de electronica digital y reparacion de computadoras I
   Proyecto: Proyecto Final II Bimestre
   Dev: Jos√© Pablo Sazo Solares
   Fecha: 27 de Junio
   link de la simulacion: https://www.tinkercad.com/things/fxnszE6HXBo-proyecto-final/editel?returnTo=%2Fdashboard%2Fdesigns%2Fcircuits&sharecode=geYEIRxS2C1Gf0xDSSzgqmehWqATslkVFI86ScjzKLo
*/

#include <Keypad.h>             // Libreria que permite usar el teclado matricial
#include <Wire.h>               // Librerias para usar el protocolo i2c
#include <LiquidCrystal_I2C.h>  // Libreria que controla la LCD por medio de I2C
#include <Servo.h>              // Libreria que permite usar el servo

#define pin_Servo 7

#define direccion_lcd 0x20
#define filas 2
#define columnas 16
 
const int leds[] = {A0, A1, A2, A3};

#define filas_teclado 4   // Cantidad de filas que posee el teclado matricial
#define columnas_teclado 4 // Cantidad de columnas que posee el teclado matricial
#define f1_teclado 6  // Pin conectado a la fila 1
#define f2_teclado 5  // Pin conectado a la fila 2
#define f3_teclado 0  // Pin conectado a la fila 3
#define f4_teclado 0  // Pin conectado a la fila 4
#define c1_teclado 4  // Pin conectado a la columna 1
#define c2_teclado 3  // Pin conectado a la columna 2
#define c3_teclado 2  // Pin conectado a la columna 3
#define c4_teclado 0  // Pin conectado a la columna 4

const int A = 10;
const int B = 11;
const int C = 12;
const int D = 0;
const int E = 13;
const int F = 9;
const int G = 8;

const int N = 7;
const int segmentos[] = {A, B, C, D, E, F, G};
const int numeros[10][N] = {
  {1, 1, 1, 0, 1, 1, 1},
  {0, 0, 1, 0, 1, 1, 1},
  {1, 0, 0, 1, 1, 0, 0},
  {0, 1, 1, 0, 0, 1, 0},
  {0, 0, 0, 0, 0, 1, 0},
  {1, 1, 1, 0, 1, 1, 1},
};
const int APAGADO = LOW;

char keys[filas_teclado][columnas_teclado] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};

byte pines_filas[filas_teclado] = {f1_teclado, f2_teclado, f3_teclado, f4_teclado};
byte pines_columnas[columnas_teclado] = {c1_teclado, c2_teclado, c3_teclado, c4_teclado};

Keypad teclado_Sazo = Keypad(makeKeymap(keys), pines_filas, pines_columnas, filas_teclado, columnas_teclado);   // Teclado matricial 4x4 conectado al Arduino por diversos pines
LiquidCrystal_I2C lcdSazo(direccion_lcd, columnas, filas); // LCD con direccion 0x20 y tamanio 16x2

// ServoMotor
Servo Servo_Sazo;

void setup() {
  Serial.begin(9600); 
  lcdSazo.init(); 
  lcdSazo.backlight(); 
  lcdSazo.print("Jose Sazo");
  lcdSazo.setCursor(0, 1);
  lcdSazo.print("Proyecto Final");  

  Servo_Sazo.attach(pin_Servo);

  for (int X = 0; X < sizeof(leds) / sizeof(leds[0]); X++) {
    pinMode(leds[X], OUTPUT);
  }
  
  for (int a = 0; a < N; a++) {
    pinMode(segmentos[a], OUTPUT);
    digitalWrite(segmentos[a], LOW);
  }
}

void printSegment(int b) {
  for (int a = 0; a < N; a++) {
    digitalWrite(segmentos[a], numeros[b][a]);
  }
}

void loop() {   
  char tecla = teclado_Sazo.getKey();
  if(tecla) {   
    if(tecla == '1') {
    for(int i = 0; i < 100; i++) {
    Serial.println(i);
    delay(200);
    }
  } 
    else if(tecla == '2') {
    for(int i = 100; i >= 0; i--) {
    Serial.println(i);
    delay(200);
    }
  } 
    else if(tecla == '3') {
    for (int X = 0; X < sizeof(leds) / sizeof(leds[0]); X++) {
    digitalWrite(leds[X], HIGH);
    delay(200);
    digitalWrite(leds[X], LOW); 
    }
    for (int X = sizeof(leds) / sizeof(leds[0]) - 1; X >= 0; X--) {
    digitalWrite(leds[X], HIGH);
    delay(200);
    digitalWrite(leds[X], LOW); 
    }
   } 
    else if(tecla == '4') {
    for (int q = 0; q < 10; q++) {
    printSegment(q);
    delay(500);
    } 
   } 
    else if(tecla == '5') { 
    Servo_Sazo.write(0);
    delay(100);
    Servo_Sazo.write(180); 
    delay(100);
    Servo_Sazo.write(0);
    }
  }
}
